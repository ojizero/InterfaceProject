<!DOCTYPE html>
<html dir="ltr" class="client-js" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>GPRS/GSM Shield v1.0 - Elecrow</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.19.1">
<link rel="shortcut icon" href="http://www.elecrow.com/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://www.elecrow.com/wiki/opensearch_desc.php" title="Elecrow (en)">
<link rel="EditURI" type="application/rsd+xml" href="http://www.elecrow.com/wiki/api.php?action=rsd">
<link rel="alternate" type="application/atom+xml" title="Elecrow Atom feed" href="http://www.elecrow.com/wiki/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load.css">
<style type="text/css" media="all">.js-messagebox{margin:1em 5%;padding:0.5em 2.5%;border:1px solid #ccc;background-color:#fcfcfc;font-size:0.8em}.js-messagebox .js-messagebox-group{margin:1px;padding:0.5em 2.5%;border-bottom:1px solid #ddd}.js-messagebox .js-messagebox-group:last-child{border-bottom:thin none transparent}

/* cache key: elecro5_CrowWiki:resourceloader:filter:minify-css:7:8b08bdc91c52a9ffba396dccfb5b473c */


.mw-collapsible-toggle{float:right} li .mw-collapsible-toggle{float:none} .mw-collapsible-toggle-li{list-style:none}

/* cache key: elecro5_CrowWiki:resourceloader:filter:minify-css:7:4250852ed2349a0d4d0fc6509a3e7d4c */
</style><meta name="ResourceLoaderDynamicStyles" content="">
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: elecro5_CrowWiki:resourceloader:filter:minify-css:7:c88e2bcd56513749bec09a7e29cb3ffa */
</style>

<script src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load_003.php"></script><script src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load_004.php"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"GPRS/GSM_Shield_v1.0","wgTitle":"GPRS/GSM Shield v1.0","wgCurRevisionId":16154,"wgArticleId":21,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages with broken file links"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"GPRS/GSM_Shield_v1.0","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"riched_use_toggle":1,"riched_start_disabled":1,"riched_use_popup":1,"riched_toggle_remember_state":1,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: elecro5_CrowWiki:resourceloader:filter:minify-js:7:95f354d9997de150b3d7d6675ee3b747 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><script type="text/javascript" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load_005.php"></script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/wiki/skins/vector/csshover.min.htc")}</style><![endif]--><style type="text/css">
:root #content > #center > .dose > .dosesingle,
:root #content > #right > .dose > .dosesingle
{ display: none !important; }</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-GPRS_GSM_Shield_v1_0 skin-vector action-view">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content" class="mw-body">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;" class="js-messagebox"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">
				<span dir="auto">GPRS/GSM Shield v1.0</span>
			</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From Elecrow</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav" class="mw-jump">
					Jump to: <a href="#mw-head">navigation</a>,
					<a href="#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div id="mw-content-text" dir="ltr" class="mw-content-ltr" lang="en"><p><b>GPRS Shield</b>
<b>: <a rel="nofollow" class="external text" href="http://www.elecrow.com/micro-controllers-c-109/shield-c-109_110/gprsgsm-shield-p-325.html">MCS01101S</a></b>
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2><span class="toctoggle">&nbsp;[<a href="#" class="internal" id="togglelink">hide</a>]&nbsp;</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Features"><span class="tocnumber">2</span> <span class="toctext">Features</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Application_Ideas"><span class="tocnumber">3</span> <span class="toctext">Application Ideas</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Cautions"><span class="tocnumber">4</span> <span class="toctext">Cautions</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Specifications"><span class="tocnumber">5</span> <span class="toctext">Specifications</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Interface_Function"><span class="tocnumber">6</span> <span class="toctext">Interface Function</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Pins_usage_on_Arduino"><span class="tocnumber">6.1</span> <span class="toctext">Pins usage on Arduino</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="#Light_Status"><span class="tocnumber">7</span> <span class="toctext">Light Status</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Usage"><span class="tocnumber">8</span> <span class="toctext">Usage</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Hardware_installation"><span class="tocnumber">8.1</span> <span class="toctext">Hardware installation</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Power_Down_the_GPRS_Shield"><span class="tocnumber">8.2</span> <span class="toctext">Power Down the GPRS Shield</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Upload_Sketch_to_Arduino"><span class="tocnumber">8.3</span> <span class="toctext">Upload Sketch to Arduino</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="#Examples"><span class="tocnumber">8.4</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-3 tocsection-14"><a href="#Sending_SMS:_using_Software_UART"><span class="tocnumber">8.4.1</span> <span class="toctext">Sending SMS: using Software UART</span></a></li>
<li class="toclevel-3 tocsection-15"><a href="#Making_a_call:_using_Software_UART"><span class="tocnumber">8.4.2</span> <span class="toctext">Making a call: using Software UART</span></a></li>
<li class="toclevel-3 tocsection-16"><a href="#Using_AT_Commands_to_Control_GPIO_and_PWM_pins"><span class="tocnumber">8.4.3</span> <span class="toctext">Using AT Commands to Control GPIO and PWM pins</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-17"><a href="#A_Simple_Source_Code_Example"><span class="tocnumber">8.5</span> <span class="toctext">A Simple Source Code Example</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#Using_Sms_to_Control_an_LED_Status"><span class="tocnumber">8.6</span> <span class="toctext">Using Sms to Control an LED Status</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-19"><a href="#SoftwareSerial_library_Notes"><span class="tocnumber">9</span> <span class="toctext">SoftwareSerial library Notes</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#FAQ"><span class="tocnumber">10</span> <span class="toctext">FAQ</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#How_to_buy"><span class="tocnumber">11</span> <span class="toctext">How to buy</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#Resources"><span class="tocnumber">12</span> <span class="toctext">Resources</span></a></li>
</ul>
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Introduction"> Introduction </span></h2>
<p>The GPRS/GSM Shield provides you a way to use the GSM cell phone 
network to receive data from a remote location. The shield allows you to
 achieve this via any of the three methods:<br>
</p>
<ul><li> Short Message Service
</li><li> Audio
</li><li> GPRS Service
</li></ul>
<p>The GPRS/GSM Shield is compatible with all boards which have the same
 form factor (and pinout) as a standard Arduino Board. The GPRS/GSM 
Shield is configured and controlled via its UART using simple AT 
commands. Based on the SIM900 module from SIMCOM, it is like a cell 
phone. Besides the communications features, the GPRS/GSM Shield has 6 
GPIOs, 2 PWMs and an ADC.
</p><p><b>Model: <a rel="nofollow" class="external text" href="http://www.elecrow.com/micro-controllers-c-109/shield-c-109_110/gprsgsm-shield-p-325.html">MCS01101S</a></b><br>
<a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_shield_v1.0.jpg" class="image"><img alt="GPRS shield v1.0.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/500px-GPRS_shield_v1.jpg" width="500" height="375"></a>
</p>
<h2> <span class="mw-headline" id="Features"> Features </span></h2>
<ul><li><b>Quad-Band 850 / 900/ 1800 / 1900 MHz</b> - would work on GSM networks in all countries across the world.
</li><li><b>GPRS multi-slot class 10/8</b>
</li><li><b>GPRS mobile station class B</b>
</li><li><b>Compliant to GSM phase 2/2+</b>
<ul><li><b>Class 4 (2 W @ 850 / 900 MHz)</b>
</li><li><b>Class 1 (1 W @ 1800 / 1900MHz)</b>
</li></ul>
</li><li><b>Control via AT commands</b> - Standard Commands: GSM 07.07 &amp; 07.05 | Enhanced Commands: SIMCOM AT Commands.
</li><li><b>Short Message Service</b> - so that you can<b> send and receive</b> small amounts of data over the network (ASCII or raw hexadecimal).
</li><li><b>Embedded TCP/UDP stack</b> - allows you to upload data to a web server.
</li><li><b>RTC supported.</b> 
</li><li><b>Selectable serial port.</b> 
</li><li><b>2 in 1 headsetjack</b> 
</li><li><b>Low power consumption</b> - 1.5mA(sleep mode)
</li><li><b>Industrial Temperature Range</b> - -40ÃÂ°C to +85 ÃÂ°C
</li></ul>
<h2> <span class="mw-headline" id="Application_Ideas"> Application Ideas  </span></h2>
<ul><li>M2M (Machine 2 Machine) Applicatoions - To transfer control data
 using SMS or GPRS between two machines located at two different 
factories. 
</li><li>Remote control of appliances - Send SMS while you are at your office to turn on or off your washing machine at home. 
</li><li>Remote Weather station or a Wireless Sensor Network - Mate it 
with [Crowduino v1.0|Crowduino v1.0] and create a sensor node capable of
 transferring sensor data (like from a weather station - temperature, 
humidity etc.) to a web server (like <a rel="nofollow" class="external text" href="http://www.pachube.com/">pachube.com</a>). 
</li><li>Vehicle Tracking System - Couple the GPRS Shield with an 
Arduino and GPS module and install it in your car and publish your 
location live on the internet. Can be used as a automotive burglar 
alarm.
</li></ul>
<p><br>
</p>
<h2> <span class="mw-headline" id="Cautions"> Cautions </span></h2>
<p><font size="3" color="red">
</font></p><font size="3" color="red">
<ul><li> Make sure your SIM card is unlocked.
</li><li> The product is provided as is without an insulating enclosure.
 Please observe ESD precautions specially in dry (low humidity) weather.
</li><li> The factory default setting for the GPRS Shield UART is 19200 bps 8-N-1. (Can be changed using AT commands).
</li></ul>
</font><p><font size="3" color="red"></font>
</p>
<h2> <span class="mw-headline" id="Specifications"> Specifications </span></h2>
<p>For SIM900's Specifications, please refer this PDF file: <a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/0/0b/SIM900_SPEC.pdf">SIM900_SPEC.pdf</a>
</p>
<table style="width: 70%;" cellspacing="0" border="1">

<tbody><tr>
<th scope="col" style="text-align: center; width: 30%"> Item
</th><th scope="col" style="text-align: center;"> Min
</th><th scope="col" style="text-align: center;"> Typical
</th><th scope="col" style="text-align: center;"> Max
</th><th scope="col" style="text-align: center;"> Unit
</th></tr>
<tr>
<th scope="row"> Voltage
</th><td style="text-align: center;">4.8
</td><td style="text-align: center;">5.0
</td><td style="text-align: center;">5.2
</td><td style="text-align: center;">VDC
</td></tr>
<tr>
<th scope="row"> Current
</th><td style="text-align: center;">/
</td><td style="text-align: center;">50
</td><td style="text-align: center;">450
</td><td style="text-align: center;">mA
</td></tr>
<tr>
<th scope="row"> Dimension(with antenna)
</th><td colspan="3" style="text-align: center;"> 110x58x19
</td><td style="text-align: center;">mm
</td></tr>
<tr>
<th scope="row"> Net Weight
</th><td colspan="3" style="text-align: center;"> 47±2
</td><td style="text-align: center;">g
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Interface_Function"> Interface Function  </span></h2>
<p><a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_Shield_interface.png" class="image"><img alt="GPRS Shield interface.png" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/600px-GPRS_Shield_interface.png" width="600" height="387"></a>
<br>
<b>Power select</b> - select the power supply for GPRS shield(external power or 5v of arduino)<br>
<b>Power jack</b> - connected to external 4.8~5VDC power supply<br>
<b>Antenna interface</b> - connected to external antenna<br>
<b>Serial port select</b> - select either software serial port or hareware serial port to be connected to GPRS Shield<br>
<b>Hardware Serial</b> - D0/D1 of Arduino/Crowduino/Seeeduino<br>
<b>Software serial</b> - D7/D8 of Arduino/Crowduino/Seeeduino only<br>
<b>Status LED</b> - tell whether the power of SIM900 is on<br>
<b>Net light</b> - tell the status about SIM900 linking to the net<br>
<b>UART of SIM900</b> - UART pins breakout of SIM900<br>
<b>Microphone</b> - to answer the phone call<br>
<b>Speaker</b> - to answer the phone call<br>
<b>GPIO,PWM and ADC of SIM900</b> - GPIO,PWM and ADC pins breakout of SIM900<br>
<b>Power key</b> - power up and down for SIM900
</p>
<h3> <span class="mw-headline" id="Pins_usage_on_Arduino"> Pins usage on Arduino </span></h3>
<p><b>D0</b> - Unused if you select hardware serial port to communicate with GPRS Shield<br> 
<b>D1</b> - Unused if you select hardware serial port to communicate with GPRS Shield<br> 
<b>D2</b> - Unused<br>
<b>D3</b> - Unused<br> 
<b>D4</b> - Unused<br> <b>D5</b> - Unused<br> <b>D6</b> - Unused<br>
<b>D7</b> - Used if you select software serial port to communicate with GPRS Shield<br> 
<b>D8</b> - Used if you select software serial port to communicate with GPRS Shield<br> 
<b>D9</b> - Used for software control the power up or down of the SIM900<br> 
<b>D10</b> - Unused<br> 
<b>D11</b> - Unused<br> 
<b>D12</b> - Unused<br> 
<b>D13</b> - Unused<br> 
<b>D14(A0)</b> - Unused<br> <b>D15(A1)</b> - Unused<br> <b>D16(A2)</b> - Unused<br> <b>D17(A3)</b> - Unused<br> <b>D18(A4)</b> - Unused<br> <b>D19(A5)</b> - Unused<br>
</p>
<h2> <span class="mw-headline" id="Light_Status">Light Status</span></h2>
<table style="width: 609px; height: 215px" cellspacing="0" border="1">

<tbody><tr>
<th style="text-align: center; width: 40%" scope="col"> <b>LED</b>
</th>
<th scope="col" style="text-align: center;"> <b>Status</b>
</th>
<th scope="col" style="text-align: center;"> <b>Function</b>
</th></tr>
<tr>
<th scope="row"> Power-on indicator(Green)
</th>
<td style="text-align: center;"> Off
</td>
<td style="text-align: center;"> Power of GPRS Shield is off
</td></tr>
<tr>
<td>
</td>
<td style="text-align: center;"> On
</td>
<td style="text-align: center;"> Power of GPRS Shield is on
</td></tr>
<tr>
<th scope="row"> Status Indicator(Red)
</th>
<td style="text-align: center;"> Off
</td>
<td style="text-align: center;"> Power off
</td></tr>
<tr>
<td>
</td>
<td style="text-align: center;"> On
</td>
<td style="text-align: center;"> Power on
</td></tr>
<tr>
<th scope="row"> Net indicator(Green)
</th>
<td style="text-align: center;"> Off
</td>
<td style="text-align: center;"> SIM900 is not working
</td></tr>
<tr>
<td>
</td>
<td style="text-align: center;"> 64ms On/800ms Off
</td>
<td style="text-align: center;"> SIM900 does not find the network
</td></tr>
<tr>
<td>
</td>
<td style="text-align: center;"> 64ms On/3000ms Off
</td>
<td style="text-align: center;"> SIM900 finds the network
</td></tr>
<tr>
<td>
</td>
<td style="text-align: center;"> 64ms On/300ms Off
</td>
<td style="text-align: center;"> GPRS communication
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Usage"> Usage </span></h2>
<h3> <span class="mw-headline" id="Hardware_installation"> Hardware installation </span></h3>
<ul><li> <b>Insert an unlocked SIM card to</b> <b>SIM Card Holder</b> - 6
 Pin Holder for SIM Cards. Both 1.8 volts and 3.0 volts SIM Cards are 
supported by SIM900 - the SIM card voltage type is automatically 
detected.
</li></ul>
<p><a href="http://www.elecrow.com/wiki/index.php?title=File:Inserting_the_SIM_Card_into_the_holder1.jpg" class="image"><img alt="Inserting the SIM Card into the holder1.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/200px-Inserting_the_SIM_Card_into_the_holder1.jpg" width="200" height="267"></a> <a href="http://www.elecrow.com/wiki/index.php?title=File:Inserting_the_SIM_Card_into_the_holder2.jpg" class="image"><img alt="Inserting the SIM Card into the holder2.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/200px-Inserting_the_SIM_Card_into_the_holder2.jpg" width="200" height="267"></a>
</p><p><br style="clear: both;">
</p>
<ul><li> <b>Make sure the antenna pad buckled properly</b> - A miniature
 coaxial RF connector is present on the GPRS Shield board to connect 
with a GSM Antenna. The connector present on the GPRS Shield is called a
 <a rel="nofollow" class="external text" href="http://en.wikipedia.org/wiki/Hirose_U.FL">U.FL connecto</a>. The GSM Antenna supplied with the GPRS Shield has an <a rel="nofollow" class="external text" href="http://en.wikipedia.org/wiki/SMA_connector">SMA connector</a>
 (and not an RP-SMA connector) on it. A patch cord is also supplied with
 the GPRS Shield to interface the antenna to the board. The connection 
topology is shown in the diagram below:<br>
</li></ul>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:402px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:The_antenna_pad.jpg" class="image"><img alt="" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/400px-The_antenna_pad.jpg" class="thumbimage" width="400" height="427"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://www.elecrow.com/wiki/index.php?title=File:The_antenna_pad.jpg" class="internal" title="Enlarge"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/magnify-clip.png" alt="" width="15" height="11"></a></div>Antenna pad properly buckled</div></div></div></div>
<p><br>
</p>
<ul><li> <b>Assemble the GSM antenna</b><br>
</li></ul>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:402px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:Assemble_GSM_antenna.jpg" class="image"><img alt="" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/400px-Assemble_GSM_antenna.jpg" class="thumbimage" width="400" height="550"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://www.elecrow.com/wiki/index.php?title=File:Assemble_GSM_antenna.jpg" class="internal" title="Enlarge"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/magnify-clip.png" alt="" width="15" height="11"></a></div>Assemble the GSM antenna</div></div></div></div><br>
<ul><li> <b>Power supply for GPRS shield</b> - Select power source with 
the switch on board, you can select the 5V power supply from arduino or 
exteral power.Select the 5V source from Arduino as the following 
picture:<br>
</li></ul>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:402px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_select_5v_of_arduino.jpg" class="image"><img alt="" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/400px-GPRS_select_5v_of_arduino.jpg" class="thumbimage" width="400" height="286"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_select_5v_of_arduino.jpg" class="internal" title="Enlarge"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/magnify-clip.png" alt="" width="15" height="11"></a></div>select 5v of arduino</div></div></div></div><br>
<ul><li> <b>Turn on the GPRS shield</b>--There is two ways to turn on the GPRS Shield.
</li></ul>
<p>1. Turn on through Hardware. Press the the 'POWERKEY' for few seconds until Power-on indicator(Green) is on.
</p>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:402px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_PowerKEY.jpg" class="image"><img alt="" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/400px-GPRS_PowerKEY.jpg" class="thumbimage" width="400" height="294"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://www.elecrow.com/wiki/index.php?title=File:GPRS_PowerKEY.jpg" class="internal" title="Enlarge"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/magnify-clip.png" alt="" width="15" height="11"></a></div>POWERONkey</div></div></div></div> 
<p>2. Turn on through Software. If the JP is soldered,run the following code, the GPRS will POWER on or POWER off.
</p>
<pre>void power_ON_Down()

pinMode(9, OUTPUT); 
digitalWrite(9,LOW);
delay(1000);
digitalWrite(9,HIGH);
delay(2000);
digitalWrite(9,LOW);
delay(3000);
</pre>
<ul><li> <b>Serial Port(UART) Communication</b>
</li></ul>
<p>The GPRS Shield is used UART protocol to communicate with an 
Arduino/Arduino clone; Users can use jumpers to connect (RX,TX) of the 
shield to either Software Serial(D8,D7) or Hardware Serial(D1,D0) of the
 Arduino.Detailed information is showed as the following picture:
</p>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:602px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:Coms.jpg" class="image"><img alt="Coms.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/Coms.jpg" class="thumbimage" width="600" height="450"></a>  <div class="thumbcaption"></div></div></div></div>
<center><b>Selectalbe GPRS Shield Communication Port</b></center>
<p><font color="red">
Note: 
</font></p><font color="red">
<ul><li>Users can use <b>"AT+IPR=?"</b> command to see supported baudrate, it will response a list of supported baudrate.
</li><li>Users can use <b>"AT+IPR=x"</b>("x" is value of supported baudrate) to set a fixed baud rate and save the configuration to non-volatile flash memory.
</li><li>When users select Software Serial to communicate, <a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/index.php?title=File:SoftwareSerial.zip">SoftwareSerial Library</a> library should be install in arduino's libraries.
</li></ul>
</font><p><font color="red"></font>
</p>
<ul><li> <b>Plug to Arduino UNO R3</b> - The GPRS Shield, like any other well designed shield, is stackable as shown in the photo below.
</li></ul>
<div class="center"><div class="thumb tnone"><div class="thumbinner" style="width:402px;"><a href="http://www.elecrow.com/wiki/index.php?title=File:Plug_GPRS_to_arduino.jpg" class="image"><img alt="" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/400px-Plug_GPRS_to_arduino.jpg" class="thumbimage" width="400" height="269"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://www.elecrow.com/wiki/index.php?title=File:Plug_GPRS_to_arduino.jpg" class="internal" title="Enlarge"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/magnify-clip.png" alt="" width="15" height="11"></a></div>GPRS Shield + Arduino UNO R3</div></div></div></div>
<h3> <span class="mw-headline" id="Power_Down_the_GPRS_Shield"> Power Down the GPRS Shield  </span></h3>
<p>The GPRS Shield can be turned off by following ways:
</p>
<ul><li><font color="red"><b>1, Normal power down procedure</b>:</font> Turn off the GPRS shield by using <b>Hardware Triger</b>; Press the <b>ON/OFF Button</b> about <font color="red">two seconds</font>.  
</li></ul>
<p><a rel="nofollow" class="external text" href="http://www.magicmeshoffer.com/">magic mesh</a> The power down scenarios illustrates as following figure:
</p>
<div class="center"><div class="floatnone"><a href="http://www.elecrow.com/wiki/index.php?title=File:ONd.jpg" class="image"><img alt="ONd.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/ONd.jpg" width="800" height="330"></a></div></div>
<center><b>Figure of Timing of turning off GPRS Shield using Hardware Triger</b></center>
<ul><li><font color="red"><b>2, Normal power down procedure</b>:</font> If <font color="red">JP</font> is soldered, then give <font color="red">Digital Pin 9</font>
  of the Arduino(act as Software Triger) a Turn off Impulse can turn off
 the GPRS Shield. The power down scenarios illustrates as following 
figure:
</li></ul>
<div class="center"><div class="floatnone"><a href="http://www.elecrow.com/wiki/index.php?title=File:Pwrd.jpg" class="image"><img alt="Pwrd.jpg" src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/Pwrd.jpg" width="800" height="352"></a></div></div>
<center><b>Figure of Timing of turning off GPRS Shield using Software Triger</b></center>
<p><font color="red">The following code is power down subroutine for Arduino if using software triger:</font>
</p>
<pre>void powerDown()
{
pinMode(9, OUTPUT); 
digitalWrite(9,LOW);
delay(1000);
digitalWrite(9,HIGH);
delay(2000);
digitalWrite(9,LOW);
delay(3000);
}
</pre>
<p><br>
</p>
<ul><li><font color="red"><b>3, Normal power down procedure</b>:</font> Turn off the GPRS shield by sending AT command <b>"AT+CPOWD=1"</b> to SIM900 module. 
</li></ul>
<p>When GPRS Shield power dowm in <b>Normal power down procedure</b>, 
the procedure lets the SIM900 log off from the network and allows the 
software to enter into a secure state and save data before completely 
disconnecting the power supply. Before the completion of the power down 
procedure the SIM900 will send out result code: 
</p><p><b>NORMAL POWER DOWN</b>
</p>
<ul><li><font color="red"><b>4, Over-voltage or Under-voltage Automatic Power Down</b>:</font> SIM900 will constantly monitor the voltage applied on the VBAT. 
</li></ul>
<p>①If the voltage ≤ 3.3V, the following URC will be presented: 
</p><p><b>UNDER-VOLTAGE WARNNING</b>
</p><p>②If the voltage ≥ 4.7V, the following URC will be presented: 
</p><p><b>OVER-VOLTAGE WARNNING</b> 
</p><p>③The uncritical voltage range is 3.2V to 4.8V. If the voltage 
&gt; 4.8V or &lt; 3.2V, SIM900 will be automatic power down soon. If the
 voltage &lt; 3.2V, the following URC will be presented: 
</p><p><b>UNDER-VOLTAGE POWER DOWN</b> 
</p><p>④If the voltage &gt; 4.8V, the following URC will be presented: 
</p><p><b>OVER-VOLTAGE POWER DOWN</b>
</p>
<ul><li><font color="red"><b>5, Over-temperature or Under-temperature Automatic Power Down</b>:</font> SIM900 will constantly monitor the temperature of the module.
</li></ul>
<p>①If the temperature &gt; 80℃, the following URC will be presented: 
</p><p><b>+CMTE:1</b> 
</p><p>②If the temperature &lt; -30℃, the following URC will be presented: 
</p><p><b>+CMTE:-1</b> 
</p><p>③The uncritical temperature range is -40℃ to +85℃. If the 
temperature &gt; +85℃ or &lt; -40℃, the module will be automatic power 
down soon. If the temperature &gt; +85℃, the following URC will be 
presented: 
</p><p><b>+CMTE:2</b> 
</p><p>④If the temperature &lt; -40℃, the following URC will be presented: 
</p><p><b>+CMTE:-2</b>
</p><p>When the GPRS Shield encounters POWER DOWN scenario, the AT 
commands can not be executed. The SIM900 logs off from network and 
enters the <font color="red">POWER DOWN mode</font>, only the RTC is still active. POWER DOWN can also be indicated by STATUS LED(<font color="blue">Blue</font>), which is off in this mode.
</p><p><font color="red">
Note: 
</font></p><font color="red">
<ul><li>To monitor the temperature, users can use the “<b>AT+CMTE</b>” command to read the temperature when GPRS Shield is powered on.
</li><li>To monitor the supply voltage, users can use the “<b>AT+CBC</b>” command which includes a parameter: voltage value(in mV) when GPRS Shield is powered on. 
</li></ul>
</font><p><font color="red"></font>
</p>
<h3> <span class="mw-headline" id="Upload_Sketch_to_Arduino"> Upload Sketch to Arduino </span></h3>
<div class="center"><div class="floatnone"><a href="http://www.elecrow.com/wiki/index.php?title=Special:Upload&amp;wpDestFile=Grpsaurduinouart.jpg" class="new" title="File:Grpsaurduinouart.jpg">600px</a></div></div>
<center><b>Data Stream among Computer, Arduino and GPRS Shield</b></center>
<p>The following sketch configures Arduino/Arduino clone as serial link between PC and the GPRS Shield<font color="red">(Jumpers on SWserial side)</font>.
 PC would need a serial terminal software to communicate with it - 
Window's built-in HyperTerminal, Arduino IDE's Serial Monitor, <a rel="nofollow" class="external text" href="http://musicshield.googlecode.com/files/sscom32E.exe">Serial Terminals(sscom32)</a> or <a rel="nofollow" class="external text" href="http://sites.google.com/site/terminalbpp/">Bray++ Terminal</a>.
</p><p>After uploading the sketch to the Arduino board, press the ON/OFF
 button on the GPRS Shield to turn it on; Now you can see what you get 
on the serial terminal and the status of the three indicator LEDs, then 
communicate with your Shield.
</p>
<pre>//Serial Relay - Arduino will patch a 
//serial link between the computer and the GPRS Shield
//at 19200 bps 8-N-1
//Computer is connected to Hardware UART
//GPRS Shield is connected to the Software UART 

#include &lt;SoftwareSerial.h&gt;

SoftwareSerial GSMSerial(7, 8);

void setup()
{
GSMSerial.begin(19200);               // the GPRS/GSM baud rate   
Serial.begin(19200);                 // the GPRS/GSM baud rate   
}

void loop()
{
if(Serial.available())

GSMSerial.print((char)Serial.read());

else  if(GSMSerial.available())

Serial.print((char)GSMSerial.read());
}
</pre>
<p><font color="red">
Note: 
</font></p><font color="red">
<ul><li>The "AT" or "at" prefix must be set at the beginning of each Command line. To terminate a Command line enter &lt;CR&gt;. 
</li></ul>
</font><p><font color="red"></font>
</p>
<h3> <span class="mw-headline" id="Examples"> Examples </span></h3>
<h4> <span class="mw-headline" id="Sending_SMS:_using_Software_UART"> Sending SMS: using Software UART  </span></h4>
<pre>
#include &lt;SoftwareSerial.h&gt;

SoftwareSerial mySerial(7, 8);

void setup()
{
mySerial.begin(19200);  //Default serial port setting for the GPRS modem is 19200bps 8-N-1
mySerial.print("\r");
delay(1000);                    //Wait for a second while the modem sends an "OK"
mySerial.print("AT+CMGF=1\r");    //Because we want to send the SMS in text mode
delay(1000);

//mySerial.print("AT+CSCA=\"+919032055002\"\r");  //Setting for the SMS Message center number,  
//delay(1000);                                  //uncomment only if required and replace with
//the message center number obtained from
//your GSM service provider.
//Note that when specifying a tring of characters
// " is entered as \"

mySerial.print("AT+CMGS=\"+9184460xxxx\"\r");    //Start accepting the text for the message
//to be sent to the number specified.
//Replace this number with the target mobile number.
delay(1000);
mySerial.print("Hello,Elecrow!\r");   //The text for the message
delay(1000);
mySerial.write(0x1A);  //Equivalent to sending Ctrl+Z 
}

void loop()
{
//We just want to send the SMS only once, so there is nothing in this loop.
//If we put the code for SMS here, it will be sent again and again and cost us a lot.
}
</pre>
<h4> <span class="mw-headline" id="Making_a_call:_using_Software_UART"> Making a call: using Software UART  </span></h4>
<pre>
#include &lt;SoftwareSerial.h&gt;

SoftwareSerial mySerial(7, 8);

void setup()
{
mySerial.begin(19200);               // the GPRS baud rate   
Serial.begin(19200);               // the GPRS baud rate   
delay(2000);
mySerial.println("ATDxxxxxxxxx;"); // xxxxxxxxx is the number you want to dial.  

if(mySerial.available())

Serial.print((unsigned char)mySerial.read());


delay(10000); 
delay(10000); 

mySerial.println("ATH"); //End the call.
if(mySerial.available())

Serial.print((unsigned char)mySerial.read());
}


void loop()
{
//Do nothing
}
</pre>
<h4> <span class="mw-headline" id="Using_AT_Commands_to_Control_GPIO_and_PWM_pins"> Using AT Commands to Control GPIO and PWM pins </span></h4>
<p><font color="red">
Note: GPIOs,PWMs and ADC of the SIM900 module are all 2V8 logic.
</font>
</p>
<pre>#include &lt;SoftwareSerial.h&gt;

SoftwareSerial mySerial(7, 8);

void setup()
{
mySerial.begin(19200);               // the GPRS baud rate   
Serial.begin(19200);               // the GPRS baud rate   
delay(2000);
}

void loop()
{
mySerial.println("AT+SPWM=1,63,100");// set PWM 1 PIN
mySerial.println("AT+SPWM=2,63,50");// set PWM 2 PIN

mySerial.println("AT+SGPIO=0,1,1,1");// set GPIO 1 PIN to 1
mySerial.println("AT+SGPIO=0,12,1,1");
delay(1000);  

mySerial.println("AT+SGPIO=0,1,1,0");// set GPIO 1 PIN to 0
mySerial.println("AT+SGPIO=0,12,1,0");
delay(1000);    
}
</pre>
<h3> <span class="mw-headline" id="A_Simple_Source_Code_Example"> A Simple Source Code Example </span></h3>
<p>The demo code below is for the Xduino to send SMS message/dial a 
voice call/submit a http request to a website and upload datas to the 
pachube. It has been tested on Arduino Duemilanove but will work on any 
compatible variant, plesse note that this sketch uses the sorfware UART 
of ATmega328P. please follow the following steps for running this 
sketch.
</p>
<ol><li> With the GPRS Shield removed, download this sketch into your Arduino.
</li><li> Disconnect the Xduino from USB port to remove power source.
</li><li> Set the Serial Port jumpers on the GPRS Shield in SWserial position, to use the Soft Serial port of Arduino.
</li><li> Connect the antenna to the GPRS Shield and insert the SIM Card.
</li><li> Mount the GPRS Shield on Arduino.
</li><li> Connect the Arduino to the computer by USB, and fire up your 
favorite serial terminal software on computer, choose the COM port for 
Arduino, set it to operate at 19200 8-N-1.
</li><li> Type command in the terminal to execute different function, threr are 4 functions in the demo:
<ol><li>If you input 't', the demo will send a SMS message to another cellphone which you set(you need set the number in the code);
</li><li> If you input 'd', the program  will dial a call to the other cellphone that you set(it is also need you set in the code );
</li><li> If you input 'h', it will submit a http request to a web that 
you want to access(it need you set the web adress in the code), it will 
return a string from the website if it goes correctly;
</li><li> If you input 's', it will upload the datas to the pachube(for 
detail you can refer to the explanation in the code). I strongly 
recommend you input 'h' before input 's', because uploading datas to the
 pachube need do some setting, after execute the function of submit a 
http request, the setting will be set.
</li></ol>
</li><li> If the program returns error in the terminal after you typed the command, don't worry, just try input the command again.
</li></ol>
<p><br>
</p>
<pre>/*Note: this code is a demo for how to using gprs shield to send sms message, dial a voice call and 
send a http request to the website, upload data to pachube.com by TCP connection,

The microcontrollers Digital Pin 7 and hence allow unhindered
communication with GPRS Shield using SoftSerial Library. 
IDE: Arduino 1.0 or later
Replace the following items in the code:
1.Phone number, don't forget add the country code
2.Replace the Access Point Name
3. Replace the Pachube API Key with your personal ones assigned
to your account at cosm.com
*/


#include &lt;SoftwareSerial.h&gt;
#include &lt;String.h&gt;

SoftwareSerial mySerial(7, 8);

void setup()
{
mySerial.begin(19200);               // the GPRS baud rate   
Serial.begin(19200);    // the GPRS baud rate 
delay(500);
}

void loop()
{
//after start up the program, you can using terminal to connect the serial of gprs shield,
//if you input 't' in the terminal, the program will execute  GetSignalQuality(),it will show the signal quality,
//if you input 't' in the terminal, the program will execute SendTextMessage(), it will show how to send a sms message,
//if input 'd' in the terminal, it will execute DialVoiceCall(), etc.

if (Serial.available())
switch(Serial.read())

case 'q':
GetSignalQuality();
break;
case 't':
SendTextMessage();
break;
case 'd':
DialVoiceCall();
break;
case 'h':
SubmitHttpRequest();
break;
case 's':
Send2Pachube();
break;

if (mySerial.available())
Serial.write(mySerial.read());
}
///GetSignalQuality()
///get the signal quality of GSM model.
void GetSignalQuality()
{
mySerial.println("AT+CSQ");  //get the signal Quality
delay(100);
int k=0;
while(mySerial.available()!=0)

SigQ[k]=mySerial.read();  
Serial.write(SigQ[k]);
k+=1;
}


///SendTextMessage()
///this function is to send a sms message
void SendTextMessage()
{
mySerial.print("AT+CMGF=1\r");    //Because we want to send the SMS in text mode
delay(100);
mySerial.println("AT + CMGS = \"+86138xxxxx615\"");//send sms message, be careful need to add a country code before the cellphone number
delay(100);
mySerial.println("A test message!");//the content of the message
delay(100);
mySerial.println((char)26);//the ASCII code of the ctrl+z is 26
delay(100);
mySerial.println();
}

///DialVoiceCall
///this function is to dial a voice call
void DialVoiceCall()
{
mySerial.println("ATD + +86138xxxxx615;");//dial the number
delay(100);
mySerial.println();
}

///SubmitHttpRequest()
///this function is submit a http request
///attention:the time of delay is very important, it must be set enough 
void SubmitHttpRequest()
{
mySerial.println("AT+CSQ");
delay(100);

ShowSerialData();// this code is to show the data from gprs shield, in order to easily see the process of how the gprs shield submit a http request, and the following is for this purpose too.

mySerial.println("AT+CGATT?");
delay(100);

ShowSerialData();

mySerial.println("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"");//setting the SAPBR, the connection type is using gprs
delay(1000);

ShowSerialData();

mySerial.println("AT+SAPBR=3,1,\"APN\",\"CMNET\"");//setting the APN, the second need you fill in your local apn server
delay(4000);

ShowSerialData();

mySerial.println("AT+SAPBR=1,1");//setting the SAPBR, for detail you can refer to the AT command mamual
delay(2000);

ShowSerialData();

mySerial.println("AT+HTTPINIT"); //init the HTTP request

delay(2000); 
ShowSerialData();

mySerial.println("AT+HTTPPARA=\"URL\",\"www.google.com.hk\"");// setting the httppara, the second parameter is the website you want to access
delay(1000);

ShowSerialData();

mySerial.println("AT+HTTPACTION=0");//submit the request 
delay(10000);//the delay is very important, the delay time is base on the return from the website, if the return datas are very large, the time required longer.
//while(!mySerial.available());

ShowSerialData();

mySerial.println("AT+HTTPREAD");// read the data from the website you access
delay(300);

ShowSerialData();

mySerial.println("");
delay(100);
}

///send2Pachube()///
///this function is to send the sensor data to the pachube, you can see the new value in the pachube after execute this function///
void Send2Pachube()
{
mySerial.println("AT+CGATT?");
delay(100);

ShowSerialData();

mySerial.println("AT+CSTT=\"CMNET\"");//start task and setting the APN,
delay(1000);

ShowSerialData();

mySerial.println("AT+CIICR");//bring up wireless connection
delay(300);

ShowSerialData();

mySerial.println("AT+CIFSR");//get local IP adress
delay(2000);

ShowSerialData();

mySerial.println("AT+CIPSPRT=0");
delay(3000);

ShowSerialData();

mySerial.println("AT+CIPSTART=\"tcp\",\"api.cosm.com\",\"8081\"");//start up the connection
delay(2000);

ShowSerialData();

mySerial.println("AT+CIPSEND");//begin send data to remote server
delay(4000);
ShowSerialData();
String humidity = "1031";//these 4 line code are imitate the real sensor data, because the demo did't add other sensor, so using 4 string variable to replace.
String moisture = "1242";//you can replace these four variable to the real sensor data in your project
String temperature = "30";//
String barometer = "60.56";//
mySerial.print("\"method\": \"put\",\"resource\": \"/feeds/43634/\",\"params\"");//here is the feed you apply from pachube
delay(500);
ShowSerialData();
mySerial.print(": ,\"headers\": \"X-PachubeApiKey\":");//in here, you should replace your pachubeapikey
delay(500);
ShowSerialData();
mySerial.print(" \"_cXwr5LE8qW4a296O-cDwOUvfddFer5pGmaRigPsiO0");//pachubeapikey
delay(500);
ShowSerialData();
mySerial.print("jEB9OjK-W6vej56j9ItaSlIac-hgbQjxExuveD95yc8BttXc");//pachubeapikey
delay(500);
ShowSerialData();
mySerial.print("Z7_seZqLVjeCOmNbEXUva45t6FL8AxOcuNSsQS\",\"body\":");
delay(500);
ShowSerialData();
mySerial.print(" \"version\": \"1.0.0\",\"datastreams\": ");
delay(500);
ShowSerialData();
mySerial.println("[\"id\": \"01\",\"current_value\": \"" + barometer + "\",");
delay(500);
ShowSerialData();
mySerial.println("\"id\": \"02\",\"current_value\": \"" + humidity + "\",");
delay(500);
ShowSerialData();
mySerial.println("\"id\": \"03\",\"current_value\": \"" + moisture + "\",");
delay(500);
ShowSerialData();
mySerial.println("\"id\": \"04\",\"current_value\": \"" + temperature + "\"],\"token\": \"lee\"");


delay(500);
ShowSerialData();

mySerial.println((char)26);//sending
delay(5000);//waitting for reply, important! the time is base on the condition of internet 
mySerial.println();

ShowSerialData();

mySerial.println("AT+CIPCLOSE");//close the connection
delay(100);
ShowSerialData();

}
void ShowSerialData()
{
while(mySerial.available()!=0)
Serial.write(mySerial.read());
}
</pre>
<p><br style="clear: both;">
</p><p>&nbsp;
</p>
<h3> <span class="mw-headline" id="Using_Sms_to_Control_an_LED_Status"> Using Sms to Control an LED Status </span></h3>
<p>This example is controbuted by MChobby, for more information please visit: <a rel="nofollow" class="external free" href="http://mchobby.be/wiki/index.php?title=SmsCommand">http://mchobby.be/wiki/index.php?title=SmsCommand</a>
</p><p>Send a SMS message "on" or "off" from your cellphone to the GPRS Shield to control the Digital Pin 13(LED) Status.
<font color="red">
</font></p><font color="red">
<ul><li> The default Buffer of Rx in SoftwareSerial.h is 32/64, you may 
experience some data lose while the returns of SIM900 are many(Receiving
 SMS/TCPIP), you can try to change the Buffer of Rx in SoftwareSerial.h 
into 
</li></ul>
<p><b>#define _SS_MAX_RX_BUFF</b> <i>128</i> // RX buffer size
</p></font><p><font color="red"></font>
</p>
<pre>// send SMS "on", if will turn on the LED
// send SMS "off", if will turn off the LED
#include &lt;SoftwareSerial.h&gt;
SoftwareSerial mySerial(7, 8);
String msg = String("");
int SmsContentFlag = 0;
int ledPin = 13;
void setup()
{
  mySerial.begin(19200);               // the GPRS baud rate   
  Serial.begin(19200);                 // the GPRS baud rate
 
  // Initialize la PIN
  pinMode( ledPin, OUTPUT ); 
  digitalWrite( ledPin, LOW ); 
  GprsTextModeSMS();
}
 
void loop()
{
    char SerialInByte;
    if(Serial.available())
    {
       mySerial.print((unsigned char)Serial.read());
    }  
    else if(mySerial.available())
    {
        char SerialInByte;
        SerialInByte = (unsigned char)mySerial.read();
        Serial.print( SerialInByte );
        if( SerialInByte == 13 )
        {
          ProcessGprsMsg();
         }
         if( SerialInByte == 10 ){
            // EN: Skip Line feed
         }
         else {
           // EN: store the current character in the message string buffer
           msg += String(SerialInByte);
         }
     }   
}
 
// EN: Make action based on the content of the SMS. 
//     Notice than SMS content is the result of the processing of several GPRS shield messages.

void ProcessSms( String sms )
{
  Serial.print( "ProcessSms for [" );
  Serial.print( sms );
  Serial.println( "]" );
 
  if( sms.indexOf("on") &gt;= 0 ){
    digitalWrite( ledPin, LOW );
    Serial.println( "LED IS ON" );
    return;
  }
  if( sms.indexOf("off") &gt;= 0 ){
    digitalWrite( ledPin, HIGH );
    Serial.println( "LED IS OFF" );
    return;
  }
}

// EN: Request Text Mode for SMS messaging

void GprsTextModeSMS(){
  mySerial.println( "AT+CMGF=1" );
}
 
void GprsReadSmsStore( String SmsStorePos ){
  // Serial.print( "GprsReadSmsStore for storePos " );
  // Serial.println( SmsStorePos ); 
  mySerial.print( "AT+CMGR=" );
  mySerial.println( SmsStorePos );
}
 
// EN: Clear the GPRS shield message buffer

void ClearGprsMsg(){
  msg = "";
}
 
// EN: interpret the GPRS shield message and act appropiately

void ProcessGprsMsg() 
{
    Serial.println("");
    Serial.print( "GPRS Message: [" );
    Serial.print( msg );
    Serial.println( "]" );
    if( msg.indexOf( "Call Ready" ) &gt;= 0 )
   {
       Serial.println( "*** GPRS Shield registered on Mobile Network ***" );
       GprsTextModeSMS();
   }
 
  // EN: unsolicited message received when getting a SMS message
  // FR: Message non sollicité quand un SMS arrive
  if( msg.indexOf( "+CMTI" ) &gt;= 0 )
  {
     Serial.println( "*** SMS Received ***" );
     // EN: Look for the coma in the full message (+CMTI: "SM",6)
     //     In the sample, the SMS is stored at position 6
     int iPos = msg.indexOf( "," );
     String SmsStorePos = msg.substring( iPos+1 );
     Serial.print( "SMS stored at " );
     Serial.println( SmsStorePos );
 
     // EN: Ask to read the SMS store
     GprsReadSmsStore( SmsStorePos );
  }
 
  // EN: SMS store readed through UART (result of GprsReadSmsStore request)  
  if( msg.indexOf( "+CMGR:" ) &gt;= 0 )
  {
    // EN: Next message will contains the BODY of SMS
    SmsContentFlag = 1;
    // EN: Following lines are essentiel to not clear the flag!
    ClearGprsMsg();
    return;
  }
 
  // EN: +CMGR message just before indicate that the following GRPS Shield message 
  //     (this message) will contains the SMS body

  if( SmsContentFlag == 1 )
  {
    Serial.println( "*** SMS MESSAGE CONTENT ***" );
    Serial.println( msg );
    Serial.println( "*** END OF SMS MESSAGE ***" );
    ProcessSms( msg );
  }
 
  ClearGprsMsg();
  // EN: Always clear the flag
  SmsContentFlag = 0; 
}
</pre>
<h2> <span class="mw-headline" id="SoftwareSerial_library_Notes"> SoftwareSerial library Notes </span></h2>
<p>With Arduino 1.0 you should be able to use the SoftwareSerial library
 included with the distribution (instead of NewSoftSerial). However, you
 must be aware that the buffer reserved for incoming messages are 
hardcoded to 64 bytes in the library header, "SoftwareSerial.h":
</p>
<pre>#define _SS_MAX_RX_BUFF 64 // RX buffer size
</pre>
<p>This means that if the GPRS module responds with more data than that,
 you are likely to loose it with a buffer overflow! For instance, 
reading out an SMS from the module with "AT+CMGR=xx" (xx is the message 
index), you might not even see the message part because the preceding 
header information (like telephone number and time) takes up a lot of 
space. The fix seems to be to manually change _SS_MAX_RX_BUFF to a 
higher value (but reasonable so you don't use all you precious memory!)
</p><p>The Softwareserial library has the following limitations (taken 
from arduino page) If using multiple software serial ports, only one can
 receive data at a time. 
<a rel="nofollow" class="external free" href="http://arduino.cc/hu/Reference/SoftwareSerial">http://arduino.cc/hu/Reference/SoftwareSerial</a>
This means that if you try to add another serial device ie grove serial 
LCD you may get communication errors unless you craft your code 
carefully.
</p>
<h2> <span class="mw-headline" id="FAQ"> FAQ  </span></h2>
<p>You can list you question here or contact with <b>techsupport@elecrow.com</b> for technology support.
</p>
<h2> <span class="mw-headline" id="How_to_buy">How to buy</span></h2>
<p>You can click <b><a rel="nofollow" class="external text" href="http://www.elecrow.com/micro-controllers-c-109/shield-c-109_110/gprsgsm-shield-p-325.html">here to buy GPRS/GSM Shield</a></b>.
</p>
<h2> <span class="mw-headline" id="Resources"> Resources </span></h2>
<ul><li><a rel="nofollow" class="external text" href="http://www.instructables.com/id/Control-the-relays-via-GPRS-SMS/#step1">Remote control via GPRS/GSM SMS</a> on instructables.
</li><li><a rel="nofollow" class="external text" href="http://m2msupport.net/m2msupport/software-and-at-commands-for-m2m-modules/">AT Command Tester </a>applicaiton
 is an online tool for testing AT commands and other module 
functionalities such as data call, voice call,HTTP, network 
registration, SMS, Phonebook, signal quality, SIM interface, device info
 etc. AT Command Tester can be used with 2G Modules (GPRS/EDGE/1x) or 3G
 Modules (HSDPA/HSPA/EVDO) or 4G modules (LTE)
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/a/a0/SIM900_ATC_V1_00.pdf">AT Commands v1.00</a> &amp; <a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/a/a8/SIM900_AT_Command_Manual_V1.03.pdf">AT Commands v1.03</a> &amp; <a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/e/e3/SIM900_HD_V1.05.pdf">Hardware Design</a> - SIM900 Documentation
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/8/87/SIM900_firmware_and_tool.zip">SIM900 firmware and tool(firmware:1137B08SIM900M64_ST)</a> for firmware upgrade
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/f/f9/1137B09SIM900M64_ST.zip">firmware:1137B09SIM900M64_ST</a>
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/images/2/27/SIM900datasheeet.zip">SIM900datasheeet</a>
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/index.php?title=File:ELE_GPRSshield_v1.0.pdf">Schematic of GPRS/GSM Shield</a>
</li><li><a rel="nofollow" class="external text" href="http://www.elecrow.com/wiki/index.php?title=File:GPRSGSM_Shield_For_Arduino.zip">GPRS/GSM Shield eagle files</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 179/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key elecro5_CrowWiki:pcache:idhash:21-0!*!*!!en!2!* and timestamp 20161115050509 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;oldid=16154">http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;oldid=16154</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://www.elecrow.com/wiki/index.php?title=Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="http://www.elecrow.com/wiki/index.php?title=Category:Pages_with_broken_file_links&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages with broken file links (page does not exist)">Pages with broken file links</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="http://www.elecrow.com/wiki/index.php?title=Special:UserLogin&amp;returnto=GPRS%2FGSM+Shield+v1.0" title="You are encouraged to log in; however, it is not mandatory [alt-shift-o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li id="ca-nstab-main" class="selected"><span><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0" title="View the content page [alt-shift-c]" accesskey="c">Page</a></span></li>
					<li id="ca-talk" class="new"><span><a href="http://www.elecrow.com/wiki/index.php?title=Talk:GPRS/GSM_Shield_v1.0&amp;action=edit&amp;redlink=1" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
	<h4>
		</h4>
	<h5><span>Variants</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0">Read</a></span></li>
					<li id="ca-viewsource"><span><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;action=edit" title="This page is protected.
You can view its source [alt-shift-e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;action=history" title="Past revisions of this page [alt-shift-h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="/wiki/index.php" id="searchform">
				<div>
			<input name="search" title="Search Elecrow [alt-shift-f]" accesskey="f" id="searchInput" type="search">			<input name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" type="submit">			<input name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" type="submit">					<input name="title" value="Special:Search" type="hidden">
		</div>
	</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/wiki/skins/common/images/wiki.png);" href="http://www.elecrow.com/wiki/index.php?title=Main_Page" title="Visit the main page"></a></div>
				<!-- /logo -->
                               <div class="portal"><h5><a href="http://www.elecrow.com/" title="Elecrow Store" target="_blank" style="color:#007cc3;font-weight:bold;">Elecrow Store</a></h5><h5></h5></div>
				
<!-- navigation -->
<div class="portal" id="p-navigation">
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="http://www.elecrow.com/wiki/index.php?title=Main_Page" title="Visit the main page [alt-shift-z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="http://www.elecrow.com/wiki/index.php?title=Special:RecentChanges" title="A list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
			<li id="n-help"><a href="http://www.elecrow.com/wiki/index.php?title=Help:Contents" title="The place to find out">Help</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- Elecrow Products -->
<div class="portal" id="p-Elecrow_Products">
	<h5>Elecrow Products</h5>
	<div class="body">
		<ul>
			<li id="n-Elecrow-Controllers"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Controllers">Elecrow Controllers</a></li>
			<li id="n-Elecrow-Shields"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Shields">Elecrow Shields</a></li>
			<li id="n-Elecrow-Crowtail"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Crowtail">Elecrow Crowtail</a></li>
			<li id="n-Elecrow-Sensors"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Sensors">Elecrow Sensors</a></li>
			<li id="n-Elecrow-Services"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Services">Elecrow Services</a></li>
			<li id="n-Elecrow_Display"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow_Display">Elecrow_Display</a></li>
			<li id="n-Modules-for-Prototyping"><a href="http://www.elecrow.com/wiki/index.php?title=Modules_for_Prototyping">Modules for Prototyping</a></li>
			<li id="n-Application-Kits"><a href="http://www.elecrow.com/wiki/index.php?title=Application_Kits">Application Kits</a></li>
		</ul>
	</div>
</div>

<!-- /Elecrow Products -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id="p-tb">
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://www.elecrow.com/wiki/index.php?title=Special:WhatLinksHere/GPRS/GSM_Shield_v1.0" title="A list of all wiki pages that link here [alt-shift-j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://www.elecrow.com/wiki/index.php?title=Special:RecentChangesLinked/GPRS/GSM_Shield_v1.0" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="http://www.elecrow.com/wiki/index.php?title=Special:SpecialPages" title="A list of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
			<li><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="http://www.elecrow.com/wiki/index.php?title=GPRS/GSM_Shield_v1.0&amp;oldid=16154" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 5 July 2016, at 08:12.</li>
											<li id="footer-info-viewcount">This page has been accessed 24,654 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow:Privacy_policy" title="Elecrow:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow:About" title="Elecrow:About">About Elecrow</a></li>
											<li id="footer-places-disclaimer"><a href="http://www.elecrow.com/wiki/index.php?title=Elecrow:General_disclaimer" title="Elecrow:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31"></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<script src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load.php"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script><script src="Wiki%20--%20GPRS_GSM%20Shield%20v1.0%20-%20Elecrow_files/load_002.php" type="text/javascript"></script>
<!-- Served in 0.353 secs. -->
	


</body><!-- Cached 20161115050509 --></html>